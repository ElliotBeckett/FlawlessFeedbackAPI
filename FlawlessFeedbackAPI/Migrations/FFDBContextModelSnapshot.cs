// <auto-generated />
using System;
using FlawlessFeedbackAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlawlessFeedbackAPI.Migrations
{
    [DbContext(typeof(FFDBContext))]
    partial class FFDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FlawlessFeedbackAPI.Models.Option", b =>
                {
                    b.Property<int>("OptionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OptionOrder")
                        .HasColumnType("int");

                    b.Property<string>("OptionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.HasKey("OptionID");

                    b.HasIndex("QuestionID");

                    b.ToTable("Options");

                    b.HasData(
                        new
                        {
                            OptionID = 1,
                            OptionOrder = 1,
                            OptionText = "True",
                            QuestionID = 1
                        },
                        new
                        {
                            OptionID = 2,
                            OptionOrder = 2,
                            OptionText = "False",
                            QuestionID = 1
                        },
                        new
                        {
                            OptionID = 3,
                            OptionOrder = 1,
                            OptionText = "A",
                            QuestionID = 2
                        },
                        new
                        {
                            OptionID = 4,
                            OptionOrder = 2,
                            OptionText = "B",
                            QuestionID = 2
                        },
                        new
                        {
                            OptionID = 5,
                            OptionOrder = 3,
                            OptionText = "C",
                            QuestionID = 2
                        });
                });

            modelBuilder.Entity("FlawlessFeedbackAPI.Models.Question", b =>
                {
                    b.Property<int>("QuestionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("QuestionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SurveyID")
                        .HasColumnType("int");

                    b.HasKey("QuestionID");

                    b.HasIndex("SurveyID");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            QuestionID = 1,
                            QuestionText = "Test Question 1",
                            SurveyID = 1
                        },
                        new
                        {
                            QuestionID = 2,
                            QuestionText = "Test Question 2",
                            SurveyID = 1
                        },
                        new
                        {
                            QuestionID = 3,
                            QuestionText = "Test Question 3",
                            SurveyID = 3
                        });
                });

            modelBuilder.Entity("FlawlessFeedbackAPI.Models.Survey", b =>
                {
                    b.Property<int>("SurveyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SurveyAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurveyComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SurveyDateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("SurveyImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurveyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurveyTopic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SurveyID");

                    b.ToTable("Surveys");

                    b.HasData(
                        new
                        {
                            SurveyID = 1,
                            SurveyAuthor = "Elliot Beckett",
                            SurveyComments = "",
                            SurveyDateCreated = new DateTime(2021, 11, 16, 14, 32, 8, 367, DateTimeKind.Local).AddTicks(8281),
                            SurveyImageURL = "",
                            SurveyTitle = "Survey 1",
                            SurveyTopic = "Testing Topic"
                        },
                        new
                        {
                            SurveyID = 2,
                            SurveyAuthor = "Joe Bloggs",
                            SurveyComments = "This is a sample survey",
                            SurveyDateCreated = new DateTime(2021, 11, 26, 14, 32, 8, 370, DateTimeKind.Local).AddTicks(8917),
                            SurveyImageURL = "",
                            SurveyTitle = "Survey 2",
                            SurveyTopic = "Default"
                        },
                        new
                        {
                            SurveyID = 3,
                            SurveyAuthor = "Mary Sue",
                            SurveyComments = "This is my super awesome survey!",
                            SurveyDateCreated = new DateTime(2021, 8, 18, 14, 32, 8, 370, DateTimeKind.Local).AddTicks(9025),
                            SurveyImageURL = "",
                            SurveyTitle = "My super survey",
                            SurveyTopic = "Survey to survey friends"
                        });
                });

            modelBuilder.Entity("FlawlessFeedbackAPI.Models.UserInfo", b =>
                {
                    b.Property<int>("UserInfoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRoleID")
                        .HasColumnType("int");

                    b.HasKey("UserInfoID");

                    b.HasIndex("UserRoleID");

                    b.ToTable("UserInfos");

                    b.HasData(
                        new
                        {
                            UserInfoID = 1,
                            UserEmail = "Steve@mail.com",
                            UserName = "Steve",
                            UserPass = "$2b$10$WHf52CO/fYrpeet1w/LFC.5EgU9soQn6mG00sXOfpDLnsI3BsgBTC",
                            UserRoleID = 1
                        },
                        new
                        {
                            UserInfoID = 2,
                            UserEmail = "Admin@FlawlessFeedback.com",
                            UserName = "Admin",
                            UserPass = "$2b$10$GambcjiWcyPfguEwk6tadutuog58ILT2UmUFpDwNFxL6L4Z09Aixa",
                            UserRoleID = 1
                        },
                        new
                        {
                            UserInfoID = 3,
                            UserEmail = "lyam@email.com",
                            UserName = "Lyam",
                            UserPass = "$2b$10$6m0ngMMwZXFqXUnKDzdyEeoYuge6hq42nOhh.lx2.vvNdyaKJWIJu",
                            UserRoleID = 2
                        });
                });

            modelBuilder.Entity("FlawlessFeedbackAPI.Models.UserRole", b =>
                {
                    b.Property<int>("UserRoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserRoleTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserRoleID");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserRoleID = 1,
                            UserRoleTitle = "Admin"
                        },
                        new
                        {
                            UserRoleID = 2,
                            UserRoleTitle = "User"
                        },
                        new
                        {
                            UserRoleID = 3,
                            UserRoleTitle = "ViewOnly"
                        });
                });

            modelBuilder.Entity("FlawlessFeedbackAPI.Models.Option", b =>
                {
                    b.HasOne("FlawlessFeedbackAPI.Models.Question", null)
                        .WithMany("Options")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FlawlessFeedbackAPI.Models.Question", b =>
                {
                    b.HasOne("FlawlessFeedbackAPI.Models.Survey", null)
                        .WithMany("Questions")
                        .HasForeignKey("SurveyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FlawlessFeedbackAPI.Models.UserInfo", b =>
                {
                    b.HasOne("FlawlessFeedbackAPI.Models.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
